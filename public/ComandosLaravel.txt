-En terminal de ubuntu ejecuto (en la ruta de Laravel): 

composer create-project --prefer-dist laravel/laravel blog


Escritorio/php/estebanraffo/Proyecto 


-Correr estos 4 comandos en la carpeta del proyecto luego de crear el proyecto (si clono el proyecto por 1era vez, 1ero composer install): 

composer install (si clone por 1era vez)
cp .env.example .env
php artisan key:generate

composer install
php artisan serve


-Lista de comandos que puedo hacer:

php artisan


-Iniciar un servidor: 

php artisan serve


-Crear el controlador:

php artisan make:controller TareasController


-Crear el modelo:

php artisan make:model Tarea


-Para ver la lista de rutas creadas:

php artisan route:list 


-Para editar un html que genera laravel:

php artisan vendor:publish


-Dentro de public crea una carpeta (/public/storage) que es el acceso directo a storage/app/public (storage interno del FW)

php artisan storage:link


-Factories: llena modelos de eloquent con inform simulada

php artisan make:factory fabricaAutores


-Seeds (semillas): Para meter info de prueba en la db. Crear informacion inicial en la db. NO SE USAN EN CONTROLLERS.

php artisan make:seed CargarAutores


-Para correr los seeds:

php artisan db:seed


-Crea pag de login y registracion (login.blade.php, register.blade.php)(views)

php artisan make:auth


-Migraciones:

1- Crar tabla:

php artisan make:migration crear_tabla_autores --create=autores


2- Modificar tabla existente.

php artisan make:migration agregar_campo_comentario --table=tareas
ó
php artisan make:migration agregar_campos_tabla_nombreTabla

Para agregar campos en una tabla existente. Crea la migración simple sin la plantilla. Métodos up() y down() correspondientes.


-Para correr todo junto:

php artisan migrate --seed (php artisan migrate + php artisan db:seed)

php artisan migrate:refresh --seed (php artisan migrate:refresh + php artisan db:seed)


3- Estado de las migraciones

php artisan migrate:status

Muestra el estado de cada migración, es decir, si fue ejecutada o no.


4- Ejecutar migración:

php artisan migrate

En nuestra base de datos se agregará la tabla nombre_tabla y en la tabla migrations se añadirá el registro de la migración 
recien ejecutada.


5- Deshacer última migración realizada

php artisan migrate:rollback

Deshace la última migración ejecutada y registrada en la base de datos (utiliza la función down, si la tabla fue creada ahora la elimina).


6- Deshacer todas las migraciones de la base.

php artisan migrate:reset

Deshace todas las migraciones de la base de datos.


7- Deshacer y reejecutar todas las migraciones.

php artisan migrate:refresh

Es equivalente a hacer php artisan migrate:reset + php artisan migrate
Deshace y vuelve a ejecutar todas las operaciones de migración.



























